services:
  database:
    image: postgis/postgis:17-3.5
    env_file:
      - docker/local/postgres.env 
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: [gab_backend]
    ports: ["5432:5432"]

  api: &api
    build:
      context: .
      dockerfile: docker/local/Dockerfile
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - docker/local/python_api.env
    depends_on:
      database:
        condition: service_started   
      redis:
        condition: service_started
    volumes:
      - .:/code
    ports: ["8000:8000"]
    restart: unless-stopped
    networks: [gab_backend]

  admin:
    <<: *api                         
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:9000"
    ports: ["9000:9000"]
    env_file:
      - docker/local/python_admin.env

  celery:
    build:
      context: .
      dockerfile: docker/local/Dockerfile
    command: celery -A gab_bookstore.celery_wsgi worker -l INFO
    env_file: [docker/local/python_api.env]
    depends_on:
      database: { condition: service_started }
      redis: { condition: service_started }
    volumes: [.:/code:delegated]
    restart: unless-stopped
    networks: [gab_backend]

  celery-beat:
    build:
      context: .
      dockerfile: docker/local/Dockerfile
    command: celery -A gab_bookstore.celery_wsgi beat \
             -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler --pidfile=
    env_file: [docker/local/python_api.env]
    depends_on:
      celery: { condition: service_started }
    volumes: [.:/code:delegated]
    restart: unless-stopped
    networks: [gab_backend]

  flower:
    image: mher/flower:2.0
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
    ports: ["5555:5555"]
    depends_on:
      redis: { condition: service_started }
    restart: unless-stopped
    networks: [gab_backend]

  redis:
    image: redis:alpine
    ports: ["6379:6379"]
    restart: unless-stopped
    networks: [gab_backend]

networks:
  gab_backend:
    driver: bridge

volumes:
  postgres_data:
