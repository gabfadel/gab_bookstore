
services:
  api:
    build:
      context: .
      dockerfile: docker/local/Dockerfile
    image: gab_bookstore_backend/api
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - docker/local/python_api.env
    depends_on:
      - database
      - redis
    networks:
      - gab_bookstore_backend-docker

  admin:
    build:
      context: .
      dockerfile: docker/local/Dockerfile
    image: gab_bookstore_backend/admin
    command: python manage.py runserver 0.0.0.0:9000
    volumes:
      - .:/code
    ports:
      - "9000:9000"
    env_file:
      - docker/local/python_admin.env
    depends_on:
      - database
      - redis
    networks:
      - gab_bookstore_backend-docker

  database:
    image: postgis/postgis:17-3.5
    env_file:
      - docker/local/python_api.env
    ports:
      - "5433:5432"
    networks:
      - gab_bookstore_backend-docker

  celery:
    image: gab_bookstore_backend/api
    command: /bin/bash -c "celery -A gab_bookstore.celery_wsgi worker -l INFO"
    env_file:
      - docker/local/python_api.env
    links:
      - database
      - redis
    volumes:
      - .:/code:delegated
    depends_on:
      - api
      - database
    networks:
      - gab_bookstore_backend-docker

  celery-beat:
    image: gab_bookstore_backend/api
    command: /bin/bash -c "celery -A gab_bookstore.celery_wsgi beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler --pidfile="
    env_file:
      - docker/local/python_api.env
    depends_on:
      - celery
    volumes:
      - .:/code:delegated
    networks:
      - gab_bookstore_backend-docker

  flower:
    image: mher/flower:2.0
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
    depends_on:
      - redis
    networks:
      - gab_bookstore_backend-docker

  redis:
    image: redis:alpine
    networks:
      - gab_bookstore_backend-docker

networks:
  gab_bookstore_backend-docker:
    driver: bridge
